version: '3.4'

networks:
  locknet:
    ipam:
      config:
        - subnet: 172.20.0.0/24

services:

  zoo-paris:
    build:
      context: ./zookeeper
      dockerfile: Dockerfile
    restart: always
    hostname: zoo-paris
    cap_add:
      - ALL
    container_name: zoo-paris
    networks:
      locknet:
        ipv4_address: 172.20.0.5
    ports:
      - 2181:2181

  locker-paris:
    build:
      context: ./locker
      dockerfile: Dockerfile
    volumes:
      - "./locker:/usr/src/app"
    environment:
      - WHOAMI=locker-paris
      - APP=${APP}
      - PLACEMENT=centralised
    depends_on:
      - zoo-paris
    links:
      - zoo-paris
    cap_add:
      - ALL
    container_name: locker-paris
    networks:
      locknet:
        ipv4_address: 172.20.0.15
    ports:
      - 4001:4001
    command: python locker.py 

  locker-tokyo:
    build:
      context: ./locker
      dockerfile: Dockerfile
    volumes:
      - "./locker:/usr/src/app"
    environment:
      - WHOAMI=locker-tokyo
      - APP=${APP}
      - PLACEMENT=centralised
    depends_on:
      - zoo-paris
    links:
      - zoo-paris
    cap_add:
      - ALL
    container_name: locker-tokyo
    networks:
      locknet:
        ipv4_address: 172.20.0.16
    ports:
      - 4002:4002
    command: python locker.py 

  locker-singapore:
    build:
      context: ./locker
      dockerfile: Dockerfile
    volumes:
      - "./locker:/usr/src/app"
    environment:
      - WHOAMI=locker-singapore
      - APP=${APP}
      - PLACEMENT=centralised
    depends_on:
      - zoo-paris
    links:
      - zoo-paris
    cap_add:
      - ALL
    container_name: locker-singapore
    networks:
      locknet:
        ipv4_address: 172.20.0.17
    ports:
      - 4003:4003
    command: python locker.py 

  locker-capetown:
    build:
      context: ./locker
      dockerfile: Dockerfile
    volumes:
      - "./locker:/usr/src/app"
    environment:
      - WHOAMI=locker-capetown
      - APP=${APP}
      - PLACEMENT=centralised
    depends_on:
      - zoo-paris
    links:
      - zoo-paris
    cap_add:
      - ALL
    container_name: locker-capetown
    networks:
      locknet:
        ipv4_address: 172.20.0.18
    ports:
      - 4004:4004
    command: python locker.py 

  locker-newyork:
    build:
      context: ./locker
      dockerfile: Dockerfile
    volumes:
      - "./locker:/usr/src/app"
    environment:
      - WHOAMI=locker-newyork
      - APP=${APP}
      - PLACEMENT=centralised
    depends_on:
      - zoo-paris
    links:
      - zoo-paris
    cap_add:
      - ALL
    container_name: locker-newyork
    networks:
      locknet:
        ipv4_address: 172.20.0.19
    ports:
      - 4005:4005
    command: python locker.py 

  paris:
    build:
      context: ./application
      dockerfile: Dockerfile
    volumes:
      - "./application:/usr/src/app"
    environment:
      - WHOAMI=paris
      - APP=${APP}
    depends_on:
      - locker-paris
    links:
      - locker-paris
    container_name: paris
    networks:
      locknet:
        ipv4_address: 172.20.0.25
    ports:
      - 6001:6000
    command: flask run --host=0.0.0.0 --port=6000

  tokyo:
    build:
      context: ./application
      dockerfile: Dockerfile
    volumes:
      - "./application:/usr/src/app"
    environment:
      - WHOAMI=tokyo
      - APP=${APP}
    depends_on:
      - locker-tokyo
    links:
      - locker-tokyo
    container_name: tokyo
    networks:
      locknet:
        ipv4_address: 172.20.0.26
    ports:
      - 6002:6000
    command: flask run --host=0.0.0.0 --port=6000

  singapore:
    build:
      context: ./application
      dockerfile: Dockerfile
    volumes:
      - "./application:/usr/src/app"
    environment:
      - WHOAMI=singapore
      - APP=${APP}
    depends_on:
      - locker-singapore
    links:
      - locker-singapore
    container_name: singapore
    networks:
      locknet:
        ipv4_address: 172.20.0.27
    ports:
      - 6003:6000
    command: flask run --host=0.0.0.0 --port=6000

  capetown:
    build:
      context: ./application
      dockerfile: Dockerfile
    volumes:
      - "./application:/usr/src/app"
    environment:
      - WHOAMI=capetown
      - APP=${APP}
    depends_on:
      - locker-capetown
    links:
      - locker-capetown
    container_name: capetown
    networks:
      locknet:
        ipv4_address: 172.20.0.28
    ports:
      - 6004:6000
    command: flask run --host=0.0.0.0 --port=6000

  newyork:
    build:
      context: ./application
      dockerfile: Dockerfile
    volumes:
      - "./application:/usr/src/app"
    environment:
      - WHOAMI=newyork
      - APP=${APP}
    depends_on:
      - locker-newyork
    links:
      - locker-newyork
    container_name: newyork
    networks:
      locknet:
        ipv4_address: 172.20.0.29
    ports:
      - 6005:6000
    command: flask run --host=0.0.0.0 --port=6000
